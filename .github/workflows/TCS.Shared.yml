name: TSC.Shared.Cloud.Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
       os: [ubuntu-latest]
       #os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Dump GitHub context
      env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
          JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    - name: Output Run ID
      run: echo ${{ github.run_id }}
    - name: Output Run Number
      run: echo ${{ github.run_number }}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore source/TSC.Shared/TSC.Shared.csproj
    - name: Install GPR
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: dotnet tool install gpr -g
    - name: Build
      run: dotnet build source/TSC.Shared/TSC.Shared.csproj --configuration Release --no-restore
    #- name: Test
      #run: dotnet test --no-restore --verbosity normal
    - name: Set Version
      id: set-version
      shell: pwsh
      run: ./.github/SetVersioning_NuGet_GitHub.ps1
    - name: Pack
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: dotnet pack -v normal -c Release --no-restore -p:PackageVersion=${{ steps.set-version.outputs.NUGET_VERSION }} source/TSC.Shared/TSC.Shared.csproj
    - name: Upload Artifact
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: dotnet nuget push "source/TSC.Shared/bin/Release/*.nupkg" -k ${{ secrets.PACKAGES_PAT }} -s "https://nuget.pkg.github.com/rcangus/index.json" --skip-duplicate